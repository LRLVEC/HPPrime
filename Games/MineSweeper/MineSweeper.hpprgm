//----------------vars-----------------------
c0,c1,c2;
n:=1;//25
a,b,a1,b1;
x,y;
p,q,j,m,k;
xt,yt;
xf,yf;
win:=0;
t1,t0;
land:={},land_dug:={},land_num:={},bomb:={};
land_pointer:={};
land_dug_num:={};
land_found_num:={};
found_bomb:={};
found_bomb_once:={};
bomb_to_set:={};
found_safe:={};
to_dig:={};
sun:=0;
stop:=0;
mode:=0;
map_mode:=0;
//-----------------functions-----------------
minesweeper_pre();
bomb_pre();
dig(x0,y0);
scanf();
showall();
ColorSet(aa,bb,color);
TextSet(aa,bb,num);
AI();
Search();
Set(x,y);
SearchBomb(x,y);
SetBomb(x,y,fg);
SetBombs();
FindRest(x,y);
//-------******-------main-------******------
//-------******------------------******------
export minesweeper()
begin
  mode:=0;
  choose(map_mode,"地图模式",{0,1});
  map_mode:=map_mode-1;
  while 1 do
    minesweeper_pre();
    t0:=ticks;
    while m*j do
      scanf();
      if land(x,y)=1 then
        j:=0; 
      else
        if land_dug(x,y)==0 then
          if sun==0 then
            xf:=(xt:=x);
            yf:=(yt:=y);
          else 
            land_pointer(xt,yt,4):={x,y};
            land_pointer(xt,yt,5):=land_pointer(xt,yt,5)+1;
          end;
          to_dig:=union(to_dig,{{x,y}});
          if mode then
            AI();//mode:=0;
          else
            dig(x,y);
          end;
        end;
      end;
      if sun+n=a*b then
        m:=0;
      end;
    end;
    t1:=ticks;
    if j=0 then
      showall();
      rect_p(G0,110,50,209,80,#FFFFFFh);
      TEXTOUT_P("You lost!",G0,117,52,7,#FF0000h);
      wait(1);
    else
      rect_p(G0,110,50,209,80,#FFFFFFh);
      TEXTOUT_P("You win!",G0,118,52,7,RGB(255,0,0));
      rect_p(G0,100,100,229,130,#FFFFFFh);
      TEXTOUT_P("Time:"+string((t1-t0)/1000,0,3)+"s",G0,105,100,7,RGB(255,0,0));
      wait(1.5);
    end;
  end;
end;
//--------------------landmine_pre----------------------------
minesweeper_pre()
begin
  win:=0;
  case
  if map_mode==0 then
    n:=100;
    a:=32;b:=24;
    a1:=33;b1:=25;
    for c1 from 1 to 32 do
      for c2 from 1 to 24 do
        land_found_num(c1,c2):=0;
        found_bomb(c1,c2):=0;
        found_bomb_once(c1,c2):=0;
        found_safe(c1,c2):=0;
        land(c1,c2):=0;
        land_dug(c1,c2):=0;
        land_dug_num(c1,c2):=8;
        land_pointer(c1,c2):={{0,0,0},{0,0,0},{0,0,0},{0,0},0};
        land_num(c1,c2):=0;
      end;
    end;
    for c1 from 2 to 23 do
      land_dug_num(1,c1):=5;
      land_dug_num(32,c1):=5;
    end;
    for c1 from 2 to 31 do
      land_dug_num(c1,1):=5;
      land_dug_num(c1,24):=5;
    end;
    land_dug_num(1,1):=3;
    land_dug_num(1,24):=3;
    land_dug_num(32,1):=3;
    land_dug_num(32,24):=3;
    RECT_P(G0,0,0,319,239,#C8C8C8h);
    for c1 from 1 to 32 do
      LINE_P(G0,10*c1-1,0,10*c1-1,239,#0h);
    end;
    for c1 from 0 to 24 do
      LINE_P(G0,0,10*c1-1,319,10*c1-1,#h);
    end;
  end;
  if map_mode==1 then
    n:=25;
    a:=15;b:=11;
    a1:=16;b1:=12;
    RECT_P(G0,0,0,319,239,RGB(100,100,100));
    RECT_P(G0,0,0,1,239,RGB(255,255,255));
    RECT_P(G0,318,0,319,239,RGB(255,255,255));
    RECT_P(G0,0,0,319,3,RGB(255,255,255));
    RECT_P(G0,0,236,319,239,RGB(255,255,255));
    for c1 from 0 to 16 do
      LINE_P(G0,21*c1+2,0,21*c1+2,239,RGB(255,255,255));
    end;
    for c1 from 0 to 11 do
      LINE_P(G0,0,21*c1+4,319,21*c1+4,RGB(255,255,255));
    END;
    for c1 from 1 to 15 do
      for c2 from 1 to 11 do
        land_found_num(c1,c2):=0;
        found_bomb(c1,c2):=0;
        found_safe(c1,c2):=0;
        land(c1,c2):=0;
        land_dug(c1,c2):=0;
        land_dug_num(c1,c2):=8;
        land_pointer(c1,c2):={{0,0,0},{0,0,0},{0,0,0},{0,0},0};
        land_num(c1,c2):=0;
      end;
    end;
    for c1 from 2 to 10 do
      land_dug_num(1,c1):=5;
      land_dug_num(15,c1):=5;
    end;
    for c1 from 2 to 14 do
      land_dug_num(c1,1):=5;
      land_dug_num(c1,11):=5;
    end;
    land_dug_num(1,1):=3;
    land_dug_num(1,11):=3;
    land_dug_num(15,1):=3;
    land_dug_num(15,11):=3;
  end;
  end;
  xt:=0;
  yt:=0;
  xf:=0;
  yf:=0;
  to_dig:={};
  bomb_to_set:={};
  bomb_pre();
  sun:=0;
  j:=1;
  m:=1;
  win:=0;
  stop:=0;
end;
//-------------------bomb_pre-----------------------------------------------------
bomb_pre()
begin
  local xs1,ys1;
  for c0 from 1 to n do
    while land(x:=randint(1,a),y:=randint(1,b)) do
    end;
    land(x,y):=1;
    bomb(c0):=x+*y;
    for c1 from -1 to 1 do
      for c2 from -1 to 1 do
        xs1:=x+c1;
        ys1:=y+c2; 
        if xs1 AND (xs1<>a1) AND ys1 AND (ys1<>b1) then
          if land(xs1,ys1)==0 then
            land_num(xs1,ys1):=land_num(xs1,ys1)+1;
          else
            land_num(xs1,ys1):=-1;
          end;
        end;
      end;
    end; 
  end;
end;
//--------------------ColorSet---------------
ColorSet(aa,bb,color)
begin
  case
    if map_mode==0 then rect_p(G0,10*aa-10,10*bb-10,10*aa-2,10*bb-2,color);end;
    if map_mode==1 then rect_p(G0,21*aa-18,21*bb-16,21*aa+1,21*bb+3,color);end;
  end;
end;
//--------------------TextSet----------------
TextSet(aa,bb,num)
begin
  case
    if map_mode==0 then textout_p(string(num),G0,10*aa-8,10*bb-10,1,#C8C8C8h);end;
    if map_mode==1 then textout_p(string(num),G0,21*aa-13,21*bb-16,4,#C8C8C8h);end;
  end;
end;
//--------------------Set--------------------
Set(xp,yp)
begin
  local xs2,ys2,c3,c4;
  for c3 from -1 to 1 do
    for c4 from -1 to 1 do
      xs2:=xp+c3;
      ys2:=yp+c4;
      if xs2 AND (xs2<>a1) AND ys2 AND (ys2<>b1) AND (c3 OR c4) then
        land_dug_num(xs2,ys2):=land_dug_num(xs2,ys2)-1;
      end; 
    end;
  end;
end;
//--------------------SearchBomb----------------
SearchBomb(xp,yp)
begin
  local xs2,ys2,c3,c4;
  for c3 from -1 to 1 do
    for c4 from -1 to 1 do
      xs2:=xp+c3;
      ys2:=yp+c4;
      if xs2 AND (xs2<>a1) AND ys2 AND (ys2<>b1) AND (c3 OR c4) then
        if land_dug(xs2,ys2)==0 then
          found_bomb(xs2,ys2):=1;
          bomb_to_set:=union(bomb_to_set,{{xs2,ys2}});
          ColorSet(xs2,ys2,#800000FFh);
        end;
      end; 
    end;
  end;
end;
//--------------------SetBomb----------------
SetBomb(xp,yp,fg)
begin
  local xs2,ys2,c3,c4;
  for c3 from -1 to 1 do
    for c4 from -1 to 1 do
      xs2:=xp+c3;
      ys2:=yp+c4;
      if xs2 AND (xs2<>a1) AND ys2 AND (ys2<>b1) AND (c3 OR c4) then
        if fg then
          land_found_num(xs2,ys2):=land_found_num(xs2,ys2)+1;
        end;
        if land_dug(xs2,ys2)==1 then
          if land_found_num(xs2,ys2)==land_num(xs2,ys2) then
            FindRest(xs2,ys2);
          end;
        end;
      end;
    end;
  end;
end;
//--------------------SetBombs---------------
SetBombs()
begin
  while size(bomb_to_set) do
    if found_bomb_once(bomb_to_set(size(bomb_to_set),1),bomb_to_set(size(bomb_to_set),2))==0 then
      SetBomb(bomb_to_set(size(bomb_to_set),1),bomb_to_set(size(bomb_to_set),2),1);
      found_bomb_once(bomb_to_set(size(bomb_to_set),1),bomb_to_set(size(bomb_to_set),2)):=1;
    else
      SetBomb(bomb_to_set(size(bomb_to_set),1),bomb_to_set(size(bomb_to_set),2),0);
    end;
    bomb_to_set:=suppress(bomb_to_set,size(bomb_to_set));
  end;
end;
//--------------------FindRest---------------
FindRest(xp,yp)
begin
  local xs2,ys2,c3,c4;
  for c3 from -1 to 1 do
    for c4 from -1 to 1 do
      xs2:=xp+c3;
      ys2:=yp+c4;
      if xs2 AND (xs2<>a1) AND ys2 AND (ys2<>b1) AND (c3 OR c4) then
        if land_dug(xs2,ys2)==0 AND found_bomb(xs2,ys2)==0 then
          to_dig:=union(to_dig,{{xs2,ys2}});
          ColorSet(xs2,ys2,#C0FFFF00h);
        end;
      end;
    end;
  end;
end;
//--------------------Search-----------------
Search(xp,yp)
begin
  //ColorSet(xp,yp,#F500FF00h);
  if found_safe(xp,yp)==0 then
    if land_dug_num(xp,yp)==land_num(xp,yp) then
      found_safe(xp,yp):=1;
      SearchBomb(xp,yp);
    end;
  end;
  if land_pointer(xp,yp,5)==0 then return;end;
  if land_pointer(xp,yp,1,1) then Search(xp-1,yp-1);end;
  if land_pointer(xp,yp,1,2) then Search(xp-1,yp  );end;
  if land_pointer(xp,yp,1,3) then Search(xp-1,yp+1);end;
  if land_pointer(xp,yp,2,1) then Search(xp  ,yp-1);end;
  if land_pointer(xp,yp,2,3) then Search(xp  ,yp+1);end;
  if land_pointer(xp,yp,3,1) then Search(xp+1,yp-1);end;
  if land_pointer(xp,yp,3,2) then Search(xp+1,yp  );end;
  if land_pointer(xp,yp,3,3) then Search(xp+1,yp+1);end;
  if land_pointer(xp,yp,4,1) then
    Search(land_pointer(xp,yp,4,1),land_pointer(xp,yp,4,2));
  end; 
end;
//--------------------dig--------------------
dig(xp,yp)
begin
  local cc1,cc2,xs1,ys1;
  xt:=xp;
  yt:=yp;
  Set(xp,yp);
  land_dug(xp,yp):=1;
  sun:=sun+1;
  ColorSet(xp,yp,#141414h);
  if land_num(xp,yp)>0 then
    TextSet(xp,yp,land_num(xp,yp));
  end;
  if land_num(xp,yp)==0 then
    found_safe(xp,yp):=1;
    for cc1 from -1 to 1 do
      for cc2 from -1 to 1 do
        xs1:=xp+cc1;
        ys1:=yp+cc2;
        if xs1 AND (xs1<>a1) AND ys1 AND (ys1<>b1) then
          if land_dug(xs1,ys1)==0 then
            land_pointer(xp,yp,2+cc1,2+cc2):=1;
            land_pointer(xp,yp,5):=1+land_pointer(xp,yp,5);
            ColorSet(xs1,ys1,#141414h);
            case
              if land_num(xs1,ys1)==0 then
                dig(xs1,ys1);
              end;
              if land_num(xs1,ys1)>0 then
                Set(xs1,ys1);
                land_dug(xs1,ys1):=1;
                TextSet(xs1,ys1,land_num(xs1,ys1));
                sun:=sun+1;
              end;
            end;
          end; 
        end;
      end;
    end;
  end;
end;
//--------------------AI---------------------
AI()
begin
  Search(xf,yf);
  SetBombs();
  while 1 do
    while size(to_dig) do
      if land_dug(to_dig(size(to_dig),1),to_dig(size(to_dig),2))==0 then
        if sun then
          land_pointer(xt,yt,4):={to_dig(size(to_dig),1),to_dig(size(to_dig),2)};
          land_pointer(xt,yt,5):=land_pointer(xt,yt,5)+1;
        end;
        dig(to_dig(size(to_dig),1),to_dig(size(to_dig),2));
      end;
      to_dig:=suppress(to_dig,size(to_dig));
    end;
    Search(xf,yf);
    SetBombs();
    if size(to_dig)==0 then break;end; 
  end;
end;
//--------------------scanf---------------------------------
scanf()
begin
  while NOT(((x:=mouse(0))+1)*((y:=mouse(1))+1)) do
    if iskeydown(0) then
      mode:=1;break;
    end;
    if iskeydown(4) then
      mode:=0;
    end;
    if mode then break;end;
  end;
  if mode then
    x:=randint(1,a);
    y:=randint(1,b);
    while land_dug(x,y)==1 OR found_bomb(x,y)==1 do
      x:=randint(1,a);
      y:=randint(1,b);
    end;
  else
    case
      if map_mode==0 then
        x:=ceiling((x+1)/10);
        y:=ceiling((y+1)/10);
      end;
      if map_mode==1 then
        x:=ceiling((x-3)/21);
        y:=ceiling((y-3)/21);
      end;
    end; 
    if x>a then x:=a;end;
    if x<1 then x:=1;end;
    if y>b then y:=b;end;
    if y<1 then y:=1;end; 
  end;
end;
//---------------------showall--------------------------
showall()
begin
  for c1 from 0 to 14 do
    for c2 from 0 to 10 do
      if land(c1+1,c2+1)=1 then
        RECT_P(G0,21*c1+3,21*c2+5,21*c1+22,21*c2+24,RGB(255,0,0));
      else
        if land_num(c1+1,c2+1)≠0 then
          RECT_P(G0,21*c1+3,21*c2+5,21*c1+22,21*c2+24,RGB(20,20,20));
          TEXTOUT_P(STRING(land_num(c1+1,c2+1)),G0,21*c1+8,21*c2+5,4,RGB(200,200,200));
        else
          RECT_P(G0,21*c1+3,21*c2+5,21*c1+22,21*c2+24,RGB(20,20,20)); 
        end; 
      end;
    end; 
  end;
end;